---

# PostgreSQL variables

# Define the encrypted SQL password variable outside the nested structures due
# to the issue described in https://stackoverflow
# .com/questions/50770524/ansible-vault-inline-variable-with-to-nice-json
# -unexpected-templating-type-erro
sql_password:

# Sentry variables.
sentry_dsn:

# GitLab variables.
gitlab_deploy_token_username: "mp-ingester-deployer"
gitlab_deploy_token_password:

# PostgreSQL Server Settings.
postgresql_python_library: "python-psycopg2"

# PostgreSQL Databases.
postgresql_databases:
  - name: "fightfor"
    port: 5432
  - name: "test"
    port: 5432

# PostgreSQL Users.
postgresql_users:
  - name: "{{ system.user }}"
    password: "{{ sql_password }}"
    port: 5432

# PostgreSQL schemata.
postgresql_schemata:
  - clinicaltrials
  - pubmed
  - mesh
  - app
  - medline

# PostgreSQL extensions.
postgresql_extensions:
  - pg_trgm
  - postgis


project:
  name: "mp-ingester"

system:
  # User name.
  user: "mp_ingester"
  # User group.
  group: "mp_ingester"
  # Application directories.
  directories:
    config: "/etc/{{ project.name }}"
    share: "/usr/local/share/{{ project.name }}"
    run: "/var/run/{{ project.name }}"
    log: "/var/log/{{ project.name }}"
    virtual_env: "/usr/local/share/{{ project.name }}/venvs/{{ project.name }}"

# Application Configuration Settings.
config:
  test:
    # General Settings.
    logger_level: DEBUG

    # PostgreSQL Server Configuration Settings.
    sql_host: "localhost"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "test"

    # Sentry configuration settings.
    sentry:
        dsn:

  dev:
    # General Settings.
    logger_level: DEBUG

    # PostgreSQL Server Configuration Settings.
    sql_host: "localhost"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "fightfor"

    # Sentry configuration settings.
    sentry:
        dsn:

  prod:
    # General Settings.
    logger_level: INFO

    # PostgreSQL Server Configuration Settings.
    sql_host: "localhost"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "fightfor"

    # Sentry configuration settings.
    sentry:
      dsn: "{{ sentry_dsn }}"
